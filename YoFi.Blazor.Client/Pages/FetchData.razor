@page "/fetchdata"
@using YoFi.Blazor.Client.Components
@inject HttpClient Http

<PageTitle>Transactions</PageTitle>

<h1>Transactions</h1>

@if (txs == null)
{
    <div class="d-flex justify-content-center spinner-container">
        <div class="spinner-border my-5" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th style="text-align:right">Date</th>
                <th>Payee</th>
                <th style="text-align:right">Amount</th>
                <th>Category</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var tx in txs.Items)
            {
                <tr>
                    <td style="text-align:right" >@tx.Timestamp.Date.ToString("M/dd")</td>
                    <td>@tx.Payee</td>
                    <td style="text-align:right">@tx.Amount.ToString("C2")</td>
                    <td>@tx.Category</td>
                </tr>
            }
        </tbody>
    </table>
    <Pagination PageInfo="@txs.PageInfo" Parameters="@txs.Parameters" PageUpdated=@UpdatePage/>
}

@code {
    private WireApi.Client.WireQueryResultOfTransaction txs;

    protected override async Task OnInitializedAsync()
    {
        var wireapi = new WireApi.Client.WireApiClient("/",Http);
        txs = await wireapi.ListTransactionsAsync(null,null,null,null,null);
    }

    private async Task UpdatePage(int newpage)
    {
        var wireapi = new WireApi.Client.WireApiClient("/",Http);
        txs = await wireapi.ListTransactionsAsync(null,newpage,null,null,null);
       
    }
}
